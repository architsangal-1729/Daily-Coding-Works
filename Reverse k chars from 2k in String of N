class Solution {
    public String reverseStr(String s, int k) {
        char[] a = s.toCharArray();
        for (int start = 0; start < a.length; start += 2 * k) {
            int i = start, j = Math.min(start + k - 1, a.length - 1);
            while (i < j) {
                char tmp = a[i];
                a[i++] = a[j];
                a[j--] = tmp;
            }
        }
        return new String(a);
    }
}

// another code

class Solution {
    public String reverseStr(String s, int k) {
        char[] arr = s.toCharArray();
        int n = arr.length;
        for(int i=0;i<=n-1;i+=2*k){
            if(i+k-1<=n-1) reverseK(i,i+k-1,arr);
            else reverseK(i,n-1,arr);
        }
        return new String(arr);
    }
    public static void reverseK(int start,int end, char[] arr){
        while(start<end){
            char temp = arr[start];
            arr[start] = arr[end];
            arr[end]=temp;
            start++;end--;
        }
    }
}
